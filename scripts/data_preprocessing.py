import re
import os

def ensure_directory_exists(path):
    os.makedirs(path, exist_ok=True)

def clean_searchsploit_data(input_file, output_file):
    # Create the raw and cleaned directories if they don't exist
    raw_dir = os.path.dirname(input_file)
    cleaned_dir = os.path.dirname(output_file)
    ensure_directory_exists(raw_dir)
    ensure_directory_exists(cleaned_dir)

    ansi_escape_pattern = re.compile(r'\x1b\[[0-9;]*m')

    try:
        with open(input_file, 'r') as file:
            lines = file.readlines()

        cleaned_data = []
        for line in lines:
            line = ansi_escape_pattern.sub('', line)  # Remove ANSI escape codes
            if '|' in line:
                exploit_title, path = line.split('|', 1)
                cleaned_data.append([exploit_title.strip(), path.strip()])

        # Assuming the header is always the first 3 lines
        cleaned_data = cleaned_data[3:]  # Remove headers

        # Save to CSV or other format
        with open(output_file, 'w') as file:
            for row in cleaned_data:
                file.write(','.join(row) + '\n')
        print(f"Successfully wrote cleaned data to {output_file}")
    except Exception as e:
        print(f"An error occurred: {e}")

# Paths must be absolute or correctly relative to the script execution directory
input_path = '/home/testing/model/data/raw/apache_results.txt'
output_path = '/home/testing/model/data/cleaned/apache_results.csv'

# Call the function to clean data
clean_searchsploit_data(input_path, output_path)
